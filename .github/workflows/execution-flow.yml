name: Website Deployment

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Test code
        id: run-tests
        run: npm run test

      - name: Upload test report
      # The correct way to use multiple conditions in if: statements is either using an expression or an inline condition, not mixing both.
        if: failure() && steps.run-tests.outcome == 'failure' 
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build website
        id: build-website
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files

      - name: Output contents
        run: ls

      - name: Deploy
        run: echo "Deploying..."
